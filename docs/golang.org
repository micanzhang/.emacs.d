* write golang in emacs
firstly assume that golang installed correctly, if not please visit [[https://golang.org/doc/install]].
and [[https://golang.org/doc/code.html]], lastest version go is recommended.

you can detected by run:
#+BEGIN_EXAMPLE
#+BEGIN_SRC sh
go env
#+END_SRC

#+RESULTS:
| amd64                            |      |          |                        |                    |                    |                                                                                                     |                          |              |
| GOBIN=""                         |      |          |                        |                    |                    |                                                                                                     |                          |              |
| GOEXE=""                         |      |          |                        |                    |                    |                                                                                                     |                          |              |
| amd64                            |      |          |                        |                    |                    |                                                                                                     |                          |              |
| darwin                           |      |          |                        |                    |                    |                                                                                                     |                          |              |
| darwin                           |      |          |                        |                    |                    |                                                                                                     |                          |              |
| /Users/micanzhang/Code/golang    |      |          |                        |                    |                    |                                                                                                     |                          |              |
| GORACE=""                        |      |          |                        |                    |                    |                                                                                                     |                          |              |
| /opt/go/go                       |      |          |                        |                    |                    |                                                                                                     |                          |              |
| /opt/go/go/pkg/tool/darwin_amd64 |      |          |                        |                    |                    |                                                                                                     |                          |              |
| clang                            |      |          |                        |                    |                    |                                                                                                     |                          |              |
| GOGCCFLAGS="-fPIC                | -m64 | -pthread | -fno-caret-diagnostics | -Qunused-arguments | -fmessage-length=0 | -fdebug-prefix-map=/var/folders/yn/dztyty452hd70gqsw61vq1_r0000gn/T/go-build037556162=/tmp/go-build | -gno-record-gcc-switches | -fno-common" |
| clang++                          |      |          |                        |                    |                    |                                                                                                     |                          |              |
| 1                                |      |          |                        |                    |                    |                                                                                                     |                          |              |
#+END_EXAMPLE
** env
*** copy env from shell
#+BEGIN_SRC elisp
(when (memq window-system '(mac ns))
    (exec-path-from-shell-initialize)
    (exec-path-from-shell-copy-env "GOROOT")
    (exec-path-from-shell-copy-env "GOPATH")
    )
#+END_SRC
*** set manually
#+BEGIN_SRC elisp
  (setenv "GOROOT" "/opt/go/go")
  (setenv "GOPATH" "/Users/micanzhang/Code/golang")
#+END_SRC
** dependency go pacakges
#+BEGIN_SRC sh
go get -u github.com/nsf/gocode
go get -u golang.org/x/tools/cmd/guru
go get -u github.com/rogpeppe/godef
go get -u golang.org/x/tools/cmd/goimports
go get -u golang.org/x/tools/cmd/gorename
#+END_SRC
*** [[https://github.com/nsf/gocode][gocode]]
*** [[https://godoc.org/golang.org/x/tools/cmd/guru][guru]]
[[http://golang.org/s/using-guru][Using Go Guru: an editor-integrated tool for navigating Go code]]
*** [[https://github.com/rogpeppe/godef][godef]]
*** [[https://godoc.org/golang.org/x/tools/cmd/goimports][goimports]]
*** [[https://godoc.org/golang.org/x/tools/refactor/rename][gorename]]
** elisp packages from melpa
you can install those packages by other pacakge repo or manully
+ [[https://github.com/dominikh/go-mode.el][go-mode]]
+ [[https://github.com/dominikh/go-mode.el/blob/master/go-guru.el][go-guru]]
+ [[https://github.com/nsf/gocode/blob/master/emacs-company/company-go.el][company-go]]
+ [[https://github.com/syohex/emacs-go-eldoc][emacs-go-eldoc]]
+ [[https://github.com/dominikh/go-mode.el/blob/master/go-rename.el][go-rename]]
*** install
#+BEGIN_SRC elisp
(require-package 'go-mode)
(require-package 'go-guru)
(require-package 'company-go)
(require-package 'go-eldoc)
(require-package 'go-rename)
#+END_SRC
** configure

#+BEGIN_SRC elisp
(defun my-go-mode-hook ()
  ;; use goimports instead gofmt which help fix packages import
  (setq gofmt-command "goimports")
  ;; call gofmt before saving
  (add-hook 'before-save-hook 'gofmt-before-save)
  ;; set compile command (C-c C-c)
  (if (not (string-match "go" compile-command))
      (set (make-local-variable 'compile-command)
           "go build -p 4 -v -race && go test -v -race -cover && go vet"))
  (local-set-key (kbd "C-c C-c") 'compile)
  ;; jump to definition
  (local-set-key (kbd "M-.") 'godef-jump)
  ;; jump to definition by open other window
  (local-set-key (kbd "C-x M-.") 'godef-jump-other-window)
  ;; jump back
  (local-set-key (kbd "M-,") 'pop-tag-mark)
  ;; set gopath for current project
  (local-set-key (kbd "C-c C-g") 'set-current-gopath)
  ;; use default gopath
  (local-set-key (kbd "C-c M-g") 'set-default-gopath)
  )

;; customrize config
(add-hook 'go-mode-hook 'my-go-mode-hook)
;; company auto complete
(add-hook 'go-mode-hook (lambda ()
                          (set (make-local-variable 'company-backends) '(company-go))
                          (company-mode)))
;; eldoc setup
(add-hook 'go-mode-hook 'go-eldoc-setup)
#+END_SRC

** TODO
+ [[https://github.com/nlamirault/gotest.el]]
